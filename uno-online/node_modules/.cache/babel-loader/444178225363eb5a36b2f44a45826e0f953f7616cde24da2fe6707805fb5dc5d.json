{"ast":null,"code":"var _jsxFileName = \"/Users/ebenezereshetu/uno-online/uno-online/uno-online/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GameBoard from './components/GameBoard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    hands: {},\n    // player id mapped to their hand\n    drawPile: [],\n    discardPile: [],\n    currentPlayerIndex: 0,\n    playDirection: 1,\n    // 1 for forward, -1 for reverse\n    currentColor: null,\n    // important for wild cards\n    unoCalled: false\n  });\n\n  // Define handleCardPlayed\n  const handleCardPlayed = card => {\n    console.log('Card played:', card);\n    // Here you would include logic to update the game state based on the played card.\n    // This might involve moving the card to the discard pile, applying any card effects,\n    // and advancing the turn to the next player.\n  };\n\n  // Define handleDrawCard if not already defined\n  const handleDrawCard = () => {\n    console.log('Draw card action triggered');\n    // Implementation for drawing a card from the draw pile\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(GameBoard, {\n      gameState: gameState,\n      onCardPlayed: handleCardPlayed,\n      onDrawCard: handleDrawCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1ZcpW8eGOqa/kkHuqSnOg6IFtzM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GameBoard","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","hands","drawPile","discardPile","currentPlayerIndex","playDirection","currentColor","unoCalled","handleCardPlayed","card","console","log","handleDrawCard","className","children","onCardPlayed","onDrawCard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ebenezereshetu/uno-online/uno-online/uno-online/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GameBoard from './components/GameBoard';\nimport './App.css';\n\nconst App = () => {\n  const [gameState, setGameState] = useState({\n    hands: {}, // player id mapped to their hand\n    drawPile: [],\n    discardPile: [],\n    currentPlayerIndex: 0,\n    playDirection: 1, // 1 for forward, -1 for reverse\n    currentColor: null, // important for wild cards\n    unoCalled: false,\n  });\n\n  // Define handleCardPlayed\n  const handleCardPlayed = (card) => {\n    console.log('Card played:', card);\n    // Here you would include logic to update the game state based on the played card.\n    // This might involve moving the card to the discard pile, applying any card effects,\n    // and advancing the turn to the next player.\n  };\n\n  // Define handleDrawCard if not already defined\n  const handleDrawCard = () => {\n    console.log('Draw card action triggered');\n    // Implementation for drawing a card from the draw pile\n  };\n\n  return (\n    <div className=\"app\">\n      <GameBoard gameState={gameState} onCardPlayed={handleCardPlayed} onDrawCard={handleDrawCard} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACzCQ,KAAK,EAAE,CAAC,CAAC;IAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,kBAAkB,EAAE,CAAC;IACrBC,aAAa,EAAE,CAAC;IAAE;IAClBC,YAAY,EAAE,IAAI;IAAE;IACpBC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;IACjC;IACA;IACA;EACF,CAAC;;EAED;EACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3BF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC;EACF,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA,CAACF,SAAS;MAACK,SAAS,EAAEA,SAAU;MAACgB,YAAY,EAAEP,gBAAiB;MAACQ,UAAU,EAAEJ;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AAEV,CAAC;AAAAtB,EAAA,CA9BKD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}